
services:
    nginx:
        container_name: nginx_gamex
        image: nginx:alpine
        depends_on:
            - fastapi
        ports:
            - 81:80
        volumes:
            - ./scripts/nginx/debug.nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - custom

    fastapi:
        container_name: fastapi_gamex
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./:/gamexbackend/ 
        networks:
            - custom
        depends_on:
            db:
                condition: service_healthy
        environment:
            - ISLOCAL=False
        command:
            - "sh"
            - "-c"
            - "python3 src/main.py"

    # worker:
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ./src:/mackendml/src
    #     command: 
    #         - "sh"
    #         - "-c"
    #         - "cd src && celery -A celery_config.worker.celery worker --loglevel=info"
    #     networks:
    #         - custom
    #     environment:
    #         - ISLOCAL=False
    #         - CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}
    #         - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}
    #     depends_on:
    #         - fastapi
    #         - redis
    # 
    # dashboard:
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     command: celery --broker=redis://${REDIS_HOST}:${REDIS_PORT} flower --port=5555
    #     networks:
    #         - custom
    #     ports:
    #         - 5556:5555
    #     environment:
    #         - ISLOCAL=False
    #         - CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}
    #         - CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}
    #     depends_on:
    #         - worker

    db:
        container_name: postgres_gamex
        image: postgres:13.0-alpine
        environment:
            - POSTGRES_PASSWORD=${DBASE_PASSWORD}
            - POSTGRES_USER=${DBASE_LOGIN}
            - POSTGRES_DB=${DBASE_NAME}
        networks:
            - custom
        ports:
            - "2344:${DBASE_PORT}"
        depends_on:
            - redis
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        container_name: redis_gamex
        image: redis:alpine
        networks:
            - custom
        ports:
            - "6380:6379"

networks:
    custom:
        driver: bridge